% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FUNs_healthmodel.R
\name{fit.health.knownquan}
\alias{fit.health.knownquan}
\title{Fit negative-binomial regression using known exposure quantile functions as the covariate}
\usage{
fit.health.knownquan(
  y,
  Z.design = NULL,
  n,
  dist.type,
  mean = NULL,
  sd = NULL,
  meanlog = NULL,
  sdlog = NULL,
  shape = NULL,
  rate = NULL,
  rand.int = FALSE,
  str = NULL,
  niter = 5000,
  burn_in = 2500,
  returnpost = FALSE,
  ...
)
}
\arguments{
\item{y}{a vector containing observed aggregate health outcomes.}

\item{Z.design}{a design matrix containing confounders that are controlled for.}

\item{n}{a number specifying the degrees of orthonormal Bernstein basis functions 
that are used for expanding \eqn{\beta(\tau)}.}

\item{dist.type}{a character specifying the distribution assumptions imposed 
for within-unit individual-level exposures. 
This function accepts three distribution assumptions 
\code{normal} (normal), \code{lognormal} (log-normal distribution), 
and \code{gamma} (gamma distribution).}

\item{mean}{If \code{dist.type} = \code{normal}, 
a vector of length that equals the number of units 
(e.g., the number of time points in a time-series design). 
This vector contains unit-specific means of assumed normal distributions.}

\item{sd}{If \code{dist.type} = \code{normal}, 
a vector containing unit-specific standard deviations of assumed normal distributions.}

\item{meanlog}{If \code{dist.type} = \code{lognormal}, 
a vector containing unit-specific means on the log scale of assumed log-normal distributions.}

\item{sdlog}{If \code{dist.type} = \code{lognormal}, 
a vector containing unit-specific standard deviations on the log scale of assumed log-normal distributions.}

\item{shape}{If \code{dist.type} = \code{gamma}, 
a vector containing unit-specific shape parameters of assumed gamma distributions.}

\item{rate}{If \code{dist.type} = \code{gamma}, 
a vector containing unit-specific rate parameters of assumed gamma distributions.}

\item{rand.int}{a logical value indicating whether unit-specific random intercepts are included.}

\item{str}{a character string specifying the structure of unit-specific random intercepts 
when \code{rand.int} = \code{TRUE}. \code{AR-1} fits random walk model of order 1 
and \code{exch} specifies exchangeable unit-specific random intercepts.}

\item{niter}{a number specifying the number of MCMC iterations, the default is 5000.}

\item{burn_in}{a number specifying the number of iterations that is discarded, the default is 2500.}

\item{returnpost}{a logical value indicating whether the returned MCMC samples containing burn-in samples.}
}
\value{
This function returns a list containing: (1) a matrix containing samples of 
basis coefficients of orthonormal Bernstein polynomials and coefficients of controlled confounders, 
(2) WAIC, and (3) parameters related to the mean-zero residual process (if \code{rand.int} = \code{TRUE}).
}
\description{
This function fits negative binomial regression models using known 
exposure quantile functions as the covariate to analyze 
aggregate health outcomes in environmental epidemiological studies with a time-series design.
}
\examples{
# Simulate time-specific means and SDs of exposure quantile functions
mean.vec <- rnorm(1000, mean = 7.2, sd = 1)
sd.vec <- rnorm(1000, mean = 1, sd = 0.2)

# Specify the true beta(tau)
betatau.true <- function(x) {x}

# Generate aggregate health outcomes 
integral <- function(x, betatau.fun, mean, sd){
  re = betatau.fun(x)*qnorm(x, mean, sd)
  return(re)
}

integration.vec <- do.call(rbind,
lapply(1:1000, function(y) integrate(integral, lower = 0, upper = 1,
betatau.fun = betatau.true, mean = mean.vec[y], sd = sd.vec[y])$value))

y.vec <- apply(cbind(rep(20, 1000), 1/(1+exp(-3.5 + integration.vec))), 1,
function(x) rnbinom(1, size = x[1], prob = x[2]))

fit.health.knownquan(y = y.vec, n = 1, dist.type = "normal", 
mean = mean.vec, sd = sd.vec, rand.int = FALSE, 
niter = 5000, burn_in = 2500)

}
\references{
Bellucci, M. A. (2014). On the explicit representation of orthonormal Bernstein polynomials. 
\emph{arXiv preprint} \href{https://arxiv.org/abs/1404.2293}{\emph{arXiv:1404.2293}}.
}
